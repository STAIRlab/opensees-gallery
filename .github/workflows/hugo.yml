name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

env:
  CACHE_KEY: 'hugo-hinode-template'
  CACHE_PATH_DEBIAN: '/tmp/hugo_cache_runner'
  CACHE_PATH_WIN: '~\AppData\Local\hugo_cache'
  CACHE_PATH_MAC: '/Users/runner/Library/Caches/hugo_cache'

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.128.0

    steps:
      - name: Set up Python
        uses: actions/setup-python@v4
        with: {"python-version": "3.x"}

      - {"name": "Install OpenSees", "run": "pip install opensees beautifulsoup4"}

      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb

      - name: Install Dart Sass
        run: sudo snap install dart-sass

      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: "npm ci"
#       run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"

      # Cache Hugo cachedir and resourcedir (configured in config/ci/hugo.toml) for each OS
      # No additional cache invalidation is needed, Hugo uses checksums itself
      - name: Use Hugo cache
        uses: actions/cache@v4
        with:
          path: ${{ runner.os == 'Windows' && env.CACHE_PATH_WIN || runner.os == 'macOS' && env.CACHE_PATH_MAC || env.CACHE_PATH_DEBIAN }}
          key: ${{ runner.os }}-${{ env.CACHE_KEY }}
          restore-keys: |
            ${{ runner.os }}-${{ env.CACHE_KEY }}

      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo --minify --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Bundle Downloads
        run: python scripts/bundle-downloads.py public/examples/*/index.html

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  # Deployment job
  deploy:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

